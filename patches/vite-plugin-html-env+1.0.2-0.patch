diff --git a/node_modules/vite-plugin-html-env/index.js b/node_modules/vite-plugin-html-env/index.js
index befe59f..50d7f53 100644
--- a/node_modules/vite-plugin-html-env/index.js
+++ b/node_modules/vite-plugin-html-env/index.js
@@ -14,8 +14,11 @@ const _loadEnv = (envPath = '.env') => {
     const data = fs.readFileSync(envFilePath, 'utf8')
 
     data.split('\n').forEach((kv) => {
-      const [key, value] = kv.replace(/\s*/g, '').split('=');
-      if (key && value) {
+      const [k, ...values] = kv.split('=')
+      const key = k.replace(/\s+/g, '')
+      const value = values.join('=').trim()
+
+      if (key) {
         res[key] = value
       }
     })
@@ -26,6 +29,22 @@ const _loadEnv = (envPath = '.env') => {
   }
 }
 
+const _getModeEnvPath = () => {
+  const argvList = process.argv.slice(2)
+  const modeIndex = argvList.findIndex(arg => arg === '-m' || arg === '--mode')
+  if (
+    modeIndex !== -1 &&
+    !!argvList[modeIndex + 1] // both null vs empty
+  ) return `.env.${argvList[modeIndex + 1]}`
+}
+
+const modeEnvPath = _getModeEnvPath()
+const envConfig = Object.assign(
+  {},
+  _loadEnv('.env'),
+  !!modeEnvPath && _loadEnv(modeEnvPath),
+)
+
 function vitePluginHtmlEnv (config) {
   return {
     name: 'rollup-plugin-html-env',
@@ -36,28 +55,12 @@ function vitePluginHtmlEnv (config) {
       if (ctx.server) {
         ctxEnvConfig = loadEnv(ctx.server.config.mode, process.cwd()) || {}
       } else {
-        const argvList = process.argv.slice(2)
-        const argvLen = argvList.length
-        const envCofnig = _loadEnv('.env')
-        // If you run the build command, the plugin will read the value of .env
-        if (argvLen === 1) {
-          ctxEnvConfig = {...ctxEnvConfig, ...envCofnig}
-        } else {
-          // Only process the --mode command
-          const modeKeyIndex = argvList.findIndex(arg => arg === '--mode')
-          const modeValueIndex = modeKeyIndex + 1
-
-          if (modeKeyIndex > -1 && argvLen >= modeValueIndex) {
-            const envPath = `.env${argvList[modeValueIndex]? `.${argvList[modeValueIndex]}`: ''}`
-
-            ctxEnvConfig =  {...ctxEnvConfig, ...envCofnig, ..._loadEnv(envPath)}
-          }
-        }
+        Object.assign(ctxEnvConfig, envConfig)
       }
 
       const map = {...ctxEnvConfig, ...config}
 
-      return html.replace(/<% (\w+) \/>/g, (match, key) => {
+      return html.replace(/<%\s+(\w+)\s+\/>/g, (match, key) => {
         return `${map[key]}`
       })
     }
